{"version":3,"sources":["logo.svg","lib/constant.js","action/index.js","component/QueryModeSelect/QueryModeSelect.js","component/QueryBar/QueryBar.js","component/ResultCard/ResultCard.js","component/ClassifierResultContainer/ClassifierResultContainer.js","component/ClassificationCard/ClassificationCard.js","component/QueryHistoryCard/QueryHistoryCard.js","component/CollectionSelect/CollectionSelect.js","component/WordCloud/WordCloud.js","component/DocumentDetailModal/DocumentDetailModal.js","component/ResultCard/BasicRow/BasicRow.js","component/ResultCard/WordCloudRow/WordCloudRow.js","lib/service.js","lib/util.js","App.js","reducer/index.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","setCurrentCollection","collectionId","type","STRINGS","ERROR","ko-KR","ko","en-US","en","CONNECTION_ERROR","BASIC_SEARCH","SIMILAR_DOCUMENT_SEARCH","PHRASAL_SEARCH","QUERY_BAR_PLACEHOLDER","RESULT_CARD_TITLE","QUERY_HISTORY_CARD_TITLE","CLASSIFICATION_CARD_TITLE","WORD_STATISTICS_CARD_TITLE","FIELDS","FIELD_NAME","FIELD_VALUE","ANNOTATIONS","WORD_CLOUD","WORD","COUNT","LOADING","i18n","keys","Object","keyCount","length","languageCode","navigator","language","i","Option","Select","QUERY_MODE_BASIC_SEARCH","QUERY_MODE_SIMILAR_DOCUMENT_SEARCH","QUERY_MODE_PHRASAL_SEARCH","QueryModeSelect","_ref","size","value","onChange","disabled","style","react_default","a","createElement","es_select","className","defaultProps","TextArea","Input","QueryBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputBlur","setState","isFocused","handleInputFocus","handleKeyPress","event","code","key","keyCode","which","shiftKey","altKey","preventDefault","onSearch","state","_this$props","queryMode","onChangeQueryMode","onChangeInput","inputValue","onClear","placeholder","sytle","component_QueryModeSelect_QueryModeSelect","margin","minWidth","height","overflow","autosize","marginRight","resize","border","boxShadow","onBlur","onFocus","onKeyPress","es_button","icon","onClick","Component","ResultCard","setCardRef","element","current","cardBody","childNodes","handlePageChange","page","currentPage","componentDidUpdate","prevProps","prevState","scrollTop","isLoading","title","data","onClickDocument","pageSize","renderRow","documentCount","partialData","slice","card","classNames","concat","bodyStyle","padding","ref","actions","pagination","total","showTotal","range","list","itemLayout","loading","dataSource","renderItem","calcColor","probability","ClassifierResultContainer","label","prob","Math","round","color","width","backgroundColor","tag","ClassificationCard","item","component_ClassifierResultContainer_ClassifierResultContainer","QueryListItem","query","date","isCurrent","collectionName","queryModeTagString","queryModeTagColor","marginBottom","fontSize","whiteSpace","QueryHistoryCard","_ref2","onClickQuery","currentIndex","QueryHistoryCard_QueryListItem","moment","format","bind","index","collection","name","CollectionSelect","collections","currentCollectionId","onChangeCollection","onClickRefresh","isLoadingCollection","map","CollectionSelect_Option","id","WORD_COLOR_SETS","blue","red","green","WordCloud","setSvgRef","svg","d3","svgElement","createWords","maxCount","datum","count","minCount","fontSizeScale","domain","fontWeightScale","colorScale","colorSet","words","fontWeight","text","annotation","sort","b","renderWordCloud","viewBoxWidth","viewBoxHeight","select","selectAll","remove","layout","cloud","rotate","on","draw","assertThisInitialized","start","stop","wordCloud","attr","word","exit","enter","append","classed","x","y","clientWidth","clientHeight","isDataChanged","prevData","newData","TabPane","Tabs","DocumentDetailModal","setModalBodyContentRef","modalBodyContent","renderFieldTable","doc","fieldPageSize","currentFieldPage","push","fieldName","fieldValue","columns","dataIndex","sorter","defaultSortOrder","table","hideOnSinglePage","renderWordTable","annotations","wordPageSize","currentWordPage","class","react","component_WordCloud_WordCloud","rowKey","visible","onOk","onCancel","footer","_this$state","modal","___highlighting","dangerouslySetInnerHTML","__html","body","tabs","defaultActiveKey","tab","___annotations","BasicRow","highlighting","Item","objectSpread","Meta","avatar","description","WordCloudRow","ResultCard_BasicRow_BasicRow","ROOT_URI","process","fetchBasicQueryResult","docCount","axios","method","url","headers","Content-Type","then","response","fetchClassifierResult","fetchSimilarDocumentQueryResult","fetchPhrasalQueryResult","browserStorage","BrowserStorage","storageAvailable","storage","window","setItem","removeItem","e","DOMException","Error","localStorage","getItem","clear","Header","Layout","Content","App","handleCollectionChange","handleCollectionRefreshClick","fetchCollections","handleQueryModeChange","nextQueryMode","handleQueryInputChange","target","handleClearQuery","handleSearch","handleSendQuery","fetchAnalysisData","handleModalClickOk","modalVisible","handleModalClickCancel","handleDocumentClick","document","selectedDocument","handleClickQuery","fetchFunc","isClassificationDataLoading","isDocumentsLoading","currentCollection","Promise","all","results","queryHistory","classificationData","classes","documents","docs","valueOf","catch","error","console","Modal","content","message","isApplicationLoading","wordStats","_this2","get","isFetchingCollections","es_layout","src","logo","alt","component_CollectionSelect_CollectionSelect","component_QueryBar_QueryBar","spin","tip","maxHeight","spinning","gridTemplateRows","component_ClassificationCard_ClassificationCard","component_QueryHistoryCard_QueryHistoryCard","component_ResultCard_ResultCard","component_DocumentDetailModal_DocumentDetailModal","_this3","onClickItem","rank","ResultCard_WordCloudRow_WordCloudRow","connect","isFetching","currentItem","items","dispatch","defaultCollectionId","mappedCollections","isCollectionFound","combineReducers","arguments","undefined","action","assign","collectionCount","targetItem","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.0aace68e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d77e78c7.svg\";","/**\r\n * This file is for declaring constants\r\n */\r\n\r\n/**\r\n * CONSTANT FOR UI TEXTS\r\n * Basic form of writing string constants:\r\n * \"ko-KR\": \"\",\r\n * ko: \"\",\r\n * \"en-US\": \"\",\r\n *  en: \"\"\r\n */\r\nconst STRINGS = {\r\n  // Common string\r\n  ERROR: {\r\n    \"ko-KR\": \"에러\",\r\n    ko: \"에러\",\r\n    \"en-US\": \"Error\",\r\n    en: \"Error\"\r\n  },\r\n  CONNECTION_ERROR: {\r\n    \"ko-KR\": \"서버 연결 에러\",\r\n    ko: \"서버 연결 에러\",\r\n    \"en-US\": \"Server Connection Error\",\r\n    en: \"Server Connection Error\"\r\n  },\r\n  // Query mode\r\n  BASIC_SEARCH: {\r\n    \"ko-KR\": \"일반 검색\",\r\n    ko: \"일반 검색\",\r\n    \"en-US\": \"Basic Search\",\r\n    en: \"Basic Search\"\r\n  },\r\n  SIMILAR_DOCUMENT_SEARCH: {\r\n    \"ko-KR\": \"유사문서 검색\",\r\n    ko: \"유사문서 검색\",\r\n    \"en-US\": \"Similar Document Search\",\r\n    en: \"Similar Document Search\"\r\n  },\r\n  PHRASAL_SEARCH: {\r\n    \"ko-KR\": \"구문 검색\",\r\n    ko: \"구문 검색\",\r\n    \"en-US\": \"Phrasal Search\",\r\n    en: \"Phrasal Search\"\r\n  },\r\n  QUERY_BAR_PLACEHOLDER: {\r\n    \"ko-KR\": \"검색하실 내용을 입력해주세요\",\r\n    ko: \"검색하실 내용을 입력해주세요\",\r\n    \"en-US\": \"Please input any query\",\r\n    en: \"Please input any query\"\r\n  },\r\n  // Query Result card\r\n  RESULT_CARD_TITLE: {\r\n    \"ko-KR\": \"검색 결과\",\r\n    ko: \"검색 결과\",\r\n    \"en-US\": \"Search Results\",\r\n    en: \"Search Results\"\r\n  },\r\n  // Query History card\r\n  QUERY_HISTORY_CARD_TITLE: {\r\n    \"ko-KR\": \"검색 히스토리\",\r\n    ko: \"검색 히스토리\",\r\n    \"en-US\": \"Query History\",\r\n    en: \"Query History\"\r\n  },\r\n\r\n  // Classification Card\r\n  CLASSIFICATION_CARD_TITLE: {\r\n    \"ko-KR\": \"구분\",\r\n    ko: \"구분\",\r\n    \"en-US\": \"Classification\",\r\n    en: \"Classification\"\r\n  },\r\n\r\n  // Word Statistics Card\r\n  WORD_STATISTICS_CARD_TITLE: {\r\n    \"ko-KR\": \"단어 통계\",\r\n    ko: \"단어 통계\",\r\n    \"en-US\": \"Word Statistics\",\r\n    en: \"Word Statistics\"\r\n  },\r\n  // Field\r\n  FIELDS: {\r\n    \"ko-KR\": \"필드\",\r\n    ko: \"필드\",\r\n    \"en-US\": \"Fields\",\r\n    en: \"Fields\"\r\n  },\r\n  FIELD_NAME: {\r\n    \"ko-KR\": \"필드명\",\r\n    ko: \"필드명\",\r\n    \"en-US\": \"Field Name\",\r\n    en: \"Field Name\"\r\n  },\r\n  FIELD_VALUE: {\r\n    \"ko-KR\": \"필드값\",\r\n    ko: \"필드값\",\r\n    \"en-US\": \"Field Value\",\r\n    en: \"Field Value\"\r\n  },\r\n  // Annotation\r\n  ANNOTATIONS: {\r\n    \"ko-KR\": \"어노테이션\",\r\n    ko: \"어노테이션\",\r\n    \"en-US\": \"Annotations\",\r\n    en: \"Annotations\"\r\n  },\r\n  // Word Cloud\r\n  WORD_CLOUD: {\r\n    \"ko-KR\": \"워드클라우드\",\r\n    ko: \"워드클라우드\",\r\n    \"en-US\": \"Word Cloud\",\r\n    en: \"Word Cloud\"\r\n  },\r\n  // Word\r\n  WORD: {\r\n    \"ko-KR\": \"워드\",\r\n    ko: \"워드\",\r\n    \"en-US\": \"Word\",\r\n    en: \"Word\"\r\n  },\r\n  // Count\r\n  COUNT: {\r\n    \"ko-KR\": \"개수\",\r\n    ko: \"개수\",\r\n    \"en-US\": \"Count\",\r\n    en: \"Count\"\r\n  },\r\n  // Loading\r\n  LOADING: {\r\n    \"ko-KR\": \"로딩중...\",\r\n    ko: \"로딩중...\",\r\n    \"en-US\": \"Loading...\",\r\n    en: \"Loading...\"\r\n  }\r\n};\r\n\r\nconst i18n = {};\r\n\r\nconst keys = Object.keys(STRINGS);\r\nconst keyCount = keys.length;\r\n// default language is English\r\nconst languageCode = navigator.language || \"en-US\";\r\nfor (let i = 0; i < keyCount; i++) {\r\n  i18n[keys[i]] = STRINGS[keys[i]][languageCode];\r\n}\r\n\r\nexport { i18n };\r\n","/**\r\n * Redux's actions\r\n * Please refer to https://redux.js.org/basics/actions\r\n */\r\nimport axios from \"axios\";\r\n\r\nexport const SET_CURRENT_COLLECTION = \"SET_CURRENT_COLLECTION\";\r\nexport const SET_COLLECTIONS = \"SET_COLLECTIONS\";\r\nexport const REQUEST_COLLECTIONS = \"REQUEST_COLLECTIONS\";\r\n\r\nconst ROOT_URI =\r\n  process.env.NODE_ENV !== \"production\"\r\n    ? \"http://localhost:3100\"\r\n    : process.env.REACT_APP_KA_API_URL;\r\n\r\nlet setCurrentCollection = collectionId => {\r\n  return {\r\n    type: SET_CURRENT_COLLECTION,\r\n    collectionId\r\n  };\r\n};\r\n\r\nlet setCollections = collections => {\r\n  return {\r\n    type: SET_COLLECTIONS,\r\n    collections\r\n  };\r\n};\r\n\r\nlet requestCollections = () => {\r\n  return {\r\n    type: REQUEST_COLLECTIONS\r\n  };\r\n};\r\n\r\nlet fetchCollections = defaultCollectionId => {\r\n  return dispatch => {\r\n    dispatch(requestCollections());\r\n    return axios\r\n      .get(`${ROOT_URI}/collections`)\r\n      .then(response => response.data)\r\n      .then(response => {\r\n        let mappedCollections = response.collections.map(collection => ({\r\n          id: collection.id,\r\n          name: collection.name\r\n        }));\r\n        let isCollectionFound = false;\r\n        if (defaultCollectionId) {\r\n          for (let i = 0, count = mappedCollections.length; i < count; i++) {\r\n            if (mappedCollections[i].id === defaultCollectionId) {\r\n              isCollectionFound = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        dispatch(setCollections(mappedCollections));\r\n        dispatch(\r\n          setCurrentCollection(\r\n            isCollectionFound\r\n              ? defaultCollectionId\r\n              : mappedCollections.length > 0\r\n                ? mappedCollections[0].id\r\n                : \"\"\r\n          )\r\n        );\r\n      })\r\n      .catch(error => console.error(error.message));\r\n  };\r\n};\r\n\r\nexport {\r\n  setCurrentCollection,\r\n  setCollections,\r\n  requestCollections,\r\n  fetchCollections\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Select } from \"antd\";\r\nimport { i18n } from \"../../lib/constant\";\r\n\r\nimport \"./QueryModeSelect.css\";\r\n\r\nconst Option = Select.Option;\r\n\r\nconst QUERY_MODE_BASIC_SEARCH = 0;\r\nconst QUERY_MODE_SIMILAR_DOCUMENT_SEARCH = 1;\r\nconst QUERY_MODE_PHRASAL_SEARCH = 2;\r\nconst QUERY_MODE = [\r\n  QUERY_MODE_BASIC_SEARCH,\r\n  QUERY_MODE_SIMILAR_DOCUMENT_SEARCH,\r\n  QUERY_MODE_PHRASAL_SEARCH\r\n];\r\n\r\nexport {\r\n  QUERY_MODE_BASIC_SEARCH,\r\n  QUERY_MODE_SIMILAR_DOCUMENT_SEARCH,\r\n  QUERY_MODE_PHRASAL_SEARCH,\r\n  QUERY_MODE\r\n};\r\n\r\nconst QueryModeSelect = ({ size, value, onChange, disabled, style }) => (\r\n  <Select\r\n    className=\"QueryModeSelect\"\r\n    size={size}\r\n    value={value}\r\n    onChange={onChange}\r\n    disabled={disabled}\r\n    style={style}\r\n  >\r\n    <Option value={QUERY_MODE_BASIC_SEARCH}>{i18n.BASIC_SEARCH}</Option>\r\n    <Option value={QUERY_MODE_SIMILAR_DOCUMENT_SEARCH}>\r\n      {i18n.SIMILAR_DOCUMENT_SEARCH}\r\n    </Option>\r\n    <Option value={QUERY_MODE_PHRASAL_SEARCH}>{i18n.PHRASAL_SEARCH}</Option>\r\n  </Select>\r\n);\r\n\r\nQueryModeSelect.propTypes = {\r\n  size: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nQueryModeSelect.defaultProps = {\r\n  size: \"default\",\r\n  value: QUERY_MODE_BASIC_SEARCH,\r\n  onChange: () => {},\r\n  disabled: false\r\n};\r\n\r\nexport default QueryModeSelect;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input, Button } from \"antd\";\r\nimport QueryModeSelect from \"../QueryModeSelect\";\r\n\r\nimport \"./QueryBar.css\";\r\nconst { TextArea } = Input;\r\n\r\nclass QueryBar extends Component {\r\n  /* React lifecycle methods */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFocused: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      queryMode,\r\n      onChangeQueryMode,\r\n      onChangeInput,\r\n      inputValue,\r\n      onClear,\r\n      onSearch,\r\n      placeholder,\r\n      disabled,\r\n      style\r\n    } = this.props;\r\n    return (\r\n      <div className=\"QueryBar\" sytle={style}>\r\n        <QueryModeSelect\r\n          value={queryMode}\r\n          onChange={onChangeQueryMode}\r\n          disabled={disabled}\r\n          style={{ margin: \"1px 0px\", minWidth: 205 }}\r\n        />\r\n        <div\r\n          className=\"QueryBar-container\"\r\n          style={{\r\n            height: this.state.isFocused ? \"auto\" : \"34px\",\r\n            overflow: this.state.isFocused ? \"auto\" : \"hidden\"\r\n          }}\r\n        >\r\n          <TextArea\r\n            disabled={disabled}\r\n            placeholder={placeholder}\r\n            autosize\r\n            onChange={onChangeInput}\r\n            style={{\r\n              marginRight: \"8px\",\r\n              resize: \"none\",\r\n              border: \"none\",\r\n              boxShadow: \"none\"\r\n            }}\r\n            value={inputValue}\r\n            onBlur={this.handleInputBlur}\r\n            onFocus={this.handleInputFocus}\r\n            onKeyPress={this.handleKeyPress}\r\n          />\r\n          <Button icon=\"close\" onClick={onClear} style={{ border: \"none\" }} />\r\n          <Button\r\n            icon=\"search\"\r\n            onClick={onSearch}\r\n            style={{\r\n              border: \"none\"\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  /* end of lifecycle methods */\r\n\r\n  /* ui handler methods */\r\n  handleInputBlur = () => {\r\n    this.setState({\r\n      isFocused: false\r\n    });\r\n  };\r\n\r\n  handleInputFocus = () => {\r\n    this.setState({\r\n      isFocused: true\r\n    });\r\n  };\r\n\r\n  handleKeyPress = event => {\r\n    let code = event.key\r\n      ? event.key\r\n      : event.keyCode\r\n        ? event.keyCode\r\n        : event.which;\r\n    if (\r\n      !(event.shiftKey || event.altKey) &&\r\n      (code === 13 || code === \"Enter\")\r\n    ) {\r\n      event.preventDefault();\r\n      this.props.onSearch();\r\n      return;\r\n    }\r\n  };\r\n  /* end of ui handler methods */\r\n}\r\n\r\nQueryBar.propTypes = {\r\n  onChangeInput: PropTypes.func,\r\n  inputValue: PropTypes.string,\r\n  onClear: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nQueryBar.defaultProps = {\r\n  onChangeInput: () => {},\r\n  inputValue: \"\",\r\n  onClear: () => {},\r\n  onSearch: () => {},\r\n  placeholder: \"Please input any query\",\r\n  disabled: false\r\n};\r\n\r\nexport default QueryBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames/bind\";\r\nimport { Card, List, Pagination } from \"antd\";\r\n\r\nimport \"./ResultCard.css\";\r\n\r\nclass ResultCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1\r\n    };\r\n  }\r\n\r\n  setCardRef = element => {\r\n    if(element.current){\r\n      this.cardBody = element.current.childNodes[1];\r\n    }\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({\r\n      currentPage: page\r\n    });\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (prevState.currentPage !== this.state.currentPage && this.cardBody) {\r\n      this.cardBody.scrollTop = 0;\r\n    }\r\n    // if the query results(documents) were loaded from server, set current page to 0\r\n    if (prevProps.isLoading && !this.props.isLoading) {\r\n      this.setState({\r\n        currentPage: 1\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      title,\r\n      data,\r\n      isLoading,\r\n      onClickDocument,\r\n      pageSize,\r\n      renderRow\r\n    } = this.props;\r\n    const { currentPage } = this.state;\r\n    const documentCount = data.length;\r\n    const partialData = data.slice(\r\n      pageSize * (currentPage - 1),\r\n      pageSize * currentPage\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        className={classNames(\"ResultCard\", className)}\r\n        title={`${title} (Top ${documentCount})`}\r\n        bodyStyle={{\r\n          overflow: \"scroll\",\r\n          height: \"calc(100% - 110.5px)\",\r\n          padding: \"8px 24px\"\r\n        }}\r\n        ref={this.setCardRef}\r\n        actions={[\r\n          <Pagination\r\n            size=\"small\"\r\n            total={documentCount}\r\n            showTotal={(total, range) =>\r\n              `${range[0]}-${range[1]} of ${total} items`\r\n            }\r\n            pageSize={pageSize}\r\n            current={currentPage}\r\n            onChange={this.handlePageChange}\r\n          />\r\n        ]}\r\n      >\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          loading={isLoading}\r\n          dataSource={partialData}\r\n          renderItem={renderRow(onClickDocument)}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nResultCard.propTypes = {\r\n  mode: PropTypes.string,\r\n  title: PropTypes.string,\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  onClickDocument: PropTypes.func,\r\n  pageSize: PropTypes.number,\r\n  renderRow: PropTypes.func.isRequired\r\n};\r\n\r\nResultCard.defaultProps = {\r\n  data: [],\r\n  title: \"Results\",\r\n  isLoading: false,\r\n  onClickDocument: () => {},\r\n  pageSize: 10,\r\n  renderRow: () => <div />\r\n};\r\n\r\nexport default ResultCard;\r\n","// module imports\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tag } from \"antd\";\r\n\r\n// static file imports\r\nimport \"./ClassifierResultContainer.css\";\r\n\r\nconst GREEN = \"rgb(165,206,91)\";\r\nconst ORANGE = \"rgb(238,191,45)\";\r\nconst RED = \"rgb(220,43,3)\";\r\n\r\nconst calcColor = probability => {\r\n  return probability >= 70\r\n    ? GREEN\r\n    : probability >= 50 && probability < 70\r\n      ? ORANGE\r\n      : RED;\r\n};\r\n\r\nconst ClassifierResultContainer = ({ probability, label, onClick }) => {\r\n  const prob = Math.round(probability * 1000) / 10;\r\n  return (\r\n    <div className=\"ClassifierResultContainer\" onClick={onClick}>\r\n      <div className=\"ClassifierResultContainer-body\">\r\n        <div className=\"ClassifierResultContainer-progressbar-text\">\r\n          Probability{\" \"}\r\n          <span style={{ color: `${calcColor(prob)}` }}>{prob}%</span>\r\n        </div>\r\n        <div className=\"ClassifierResultContainer-progressbar\">\r\n          <div\r\n            style={{\r\n              height: \"100%\",\r\n              width: `calc(${prob / 100} * 100%)`,\r\n              backgroundColor: `${calcColor(prob)}`\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Tag color=\"orange\">{label}</Tag>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nClassifierResultContainer.propTypes = {\r\n  probability: PropTypes.number.isRequired,\r\n  label: PropTypes.string\r\n};\r\n\r\nClassifierResultContainer.defaultProps = {\r\n  probability: 0,\r\n  label: \"not available\"\r\n};\r\n\r\nexport default ClassifierResultContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames/bind\";\r\nimport { Card, List } from \"antd\";\r\nimport ClassifierResultContainer from \"../ClassifierResultContainer\";\r\nimport \"./ClassificationCard.css\";\r\n\r\nconst ClassificationCard = ({ className, title, data, isLoading }) => (\r\n  <Card\r\n    className={classNames(\"ClassificationCard\", className)}\r\n    title={title}\r\n    bodyStyle={{ overflow: \"scroll\", height: \"calc(100% - 56px)\" }}\r\n  >\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      loading={isLoading}\r\n      dataSource={data}\r\n      renderItem={item => (\r\n        <ClassifierResultContainer\r\n          key={`${item.probability}-${item.label}`}\r\n          label={item.label}\r\n          probability={item.probability}\r\n        />\r\n      )}\r\n    />\r\n  </Card>\r\n);\r\n\r\nClassificationCard.propTypes = {\r\n  title: PropTypes.string,\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nClassificationCard.defaultProps = {\r\n  title: \"Classification\",\r\n  data: [],\r\n  isLoading: false\r\n};\r\n\r\nexport default ClassificationCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames/bind\";\r\nimport { Card, List, Tag } from \"antd\";\r\nimport { i18n } from \"../../lib/constant\";\r\n\r\nimport \"./QueryHistoryCard.css\";\r\n\r\nconst QueryListItem = ({\r\n  query,\r\n  date,\r\n  onClick,\r\n  queryMode,\r\n  isCurrent,\r\n  collectionName\r\n}) => {\r\n  const queryModeTagString =\r\n    queryMode === 0\r\n      ? i18n.BASIC_SEARCH\r\n      : queryMode === 1\r\n        ? i18n.SIMILAR_DOCUMENT_SEARCH\r\n        : i18n.PHRASAL_SEARCH;\r\n  const queryModeTagColor =\r\n    queryMode === 0 ? \"red\" : queryMode === 1 ? \"cyan\" : \"blue\";\r\n  return (\r\n    <div className=\"QueryListItem\" onClick={isCurrent ? null : onClick}>\r\n      {isCurrent && (\r\n        <Tag color=\"#87d068\" style={{ marginBottom: \"8px\" }}>\r\n          Current\r\n        </Tag>\r\n      )}\r\n      <Tag color={queryModeTagColor}>{queryModeTagString}</Tag>\r\n      <Tag>Collection: {collectionName}</Tag>\r\n      <div\r\n        style={{\r\n          fontSize: \"14px\",\r\n          marginBottom: \"8px\",\r\n          whiteSpace: \"pre-wrap\"\r\n        }}\r\n      >\r\n        {query.length > 300 ? `${query.slice(0, 300)}...` : query}\r\n      </div>\r\n      <div className=\"QueryListItem-footer\">\r\n        {date}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQueryListItem.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  date: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onClick: PropTypes.func,\r\n  queryMode: PropTypes.number,\r\n  isCurrent: PropTypes.bool\r\n};\r\n\r\nQueryListItem.defaultProps = {\r\n  query: \"\",\r\n  date: 0,\r\n  onClick: () => {},\r\n  queryMode: 0,\r\n  isCurrent: false\r\n};\r\n\r\nconst QueryHistoryCard = ({\r\n  className,\r\n  title,\r\n  data,\r\n  isLoading,\r\n  onClickQuery\r\n}) => {\r\n  const currentIndex = data.length - 1 || 0;\r\n  return (\r\n    <Card\r\n      className={classNames(\"QueryHistoryCard\", className)}\r\n      loading={isLoading}\r\n      title={title}\r\n      bodyStyle={{\r\n        overflow: \"scroll\",\r\n        height: \"calc(100% - 56px)\",\r\n        padding: \"8px 16px\"\r\n      }}\r\n    >\r\n      <List\r\n        dataSource={data}\r\n        renderItem={item => {\r\n          return (\r\n            <QueryListItem\r\n              query={item.query}\r\n              date={moment(item.date).format(\"LLL\")}\r\n              onClick={onClickQuery.bind(\r\n                this,\r\n                item.index,\r\n                item.query,\r\n                item.queryMode\r\n              )}\r\n              isCurrent={currentIndex === item.index}\r\n              queryMode={item.queryMode}\r\n              collectionName={item.collection.name}\r\n            />\r\n          );\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nQueryHistoryCard.propTypes = {\r\n  title: PropTypes.string,\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      index: PropTypes.number,\r\n      queryString: PropTypes.string,\r\n      date: PropTypes.number,\r\n      queryMode: PropTypes.number\r\n    })\r\n  ),\r\n  isLoading: PropTypes.bool,\r\n  onClickQuery: PropTypes.func\r\n};\r\n\r\nQueryHistoryCard.defaultProps = {\r\n  title: \"Query History\",\r\n  data: [],\r\n  isLoading: false,\r\n  onClickQuery: () => {}\r\n};\r\n\r\nexport default QueryHistoryCard;\r\n","// module imports\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Select, Button } from \"antd\";\r\n\r\n// static file imports\r\nimport \"./CollectionSelect.css\";\r\n\r\nconst Option = Select.Option;\r\nconst CollectionSelect = ({\r\n  collections,\r\n  currentCollectionId,\r\n  onChangeCollection,\r\n  onClickRefresh,\r\n  isLoadingCollection\r\n}) => (\r\n  <div className=\"CollectionSelect\">\r\n    <Select\r\n      className=\"CollectionSelect-select\"\r\n      value={currentCollectionId}\r\n      onChange={onChangeCollection}\r\n      disabled={isLoadingCollection}\r\n    >\r\n      {collections.map(collection => (\r\n        <Option key={collection.id} value={collection.id}>\r\n          {collection.name}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n    <Button\r\n      type=\"primary\"\r\n      loading={isLoadingCollection}\r\n      icon={\"reload\"}\r\n      onClick={onClickRefresh}\r\n    />\r\n  </div>\r\n);\r\n\r\nCollectionSelect.defaultProps = {\r\n  collections: [],\r\n  currentCollectionId: \"\",\r\n  onChange: () => {},\r\n  onClickRefresh: () => {}\r\n};\r\n\r\nCollectionSelect.propTypes = {\r\n  collections: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      id: PropTypes.string\r\n    })\r\n  ),\r\n  currentCollectionId: PropTypes.string,\r\n  onChangeCollection: PropTypes.func,\r\n  onClickRefresh: PropTypes.func,\r\n  isLoadingCollection: PropTypes.bool\r\n};\r\n\r\nexport default CollectionSelect;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as d3 from \"d3\";\r\nimport cloud from \"d3-cloud\";\r\n\r\nimport \"./WordCloud.css\";\r\n\r\nconst WORD_COLOR_SETS = {\r\n  blue: [\r\n    /* IBM Design color: Cerulean */\r\n    \"#95c4f3\",\r\n    \"#56acf2\",\r\n    \"#009bef\",\r\n    \"#047cc0\",\r\n    \"#175d8d\",\r\n    \"#1c496d\"\r\n  ],\r\n  red: [\r\n    /* IBM Design color: Red */\r\n    \"#ffaa9d\",\r\n    \"#ff806c\",\r\n    \"#ff5c49\",\r\n    \"#e62325\",\r\n    \"#aa231f\",\r\n    \"#83231e\"\r\n  ],\r\n  green: [\r\n    /* IBM Design color: Green */\r\n    \"#57d785\",\r\n    \"#34bc6e\",\r\n    \"#00aa5e\",\r\n    \"#00884b\",\r\n    \"#116639\",\r\n    \"#12512e\"\r\n  ]\r\n  // \"#E3F2FD\",\r\n  // \"#BBDEFB\",\r\n  // \"#90CAF9\",\r\n  // \"#64B5F6\",\r\n  // \"#42A5F5\",\r\n  // \"#2196F3\",\r\n  // \"#1E88E5\",\r\n  // \"#1976D2\",\r\n  // \"#1565C0\",\r\n  // \"#0D47A1\"\r\n  /* IBM Design color : Blue */\r\n  // \"#a8c0f3\",\r\n  // \"#79a6f6\",\r\n  // \"#5392ff\",\r\n  // \"#2d74da\",\r\n  // \"#1f57a4\",\r\n  // \"#25467a\",\r\n  // \"#1d3458\",\r\n  // \"#19273c\"\r\n};\r\n\r\nclass WordCloud extends Component {\r\n  /* React lifecycle methods */\r\n  setSvgRef = element => {\r\n    this.svg = d3.select(element);\r\n    this.svgElement = element;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.renderWordCloud(\r\n      this.props.data,\r\n      this.svgElement.clientWidth,\r\n      this.svgElement.clientHeight\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevDataLength = prevProps.data.length;\r\n    const newDataLength = this.props.data.length;\r\n    if (\r\n      prevDataLength !== newDataLength ||\r\n      this.isDataChanged(prevProps.data, this.props.data)\r\n    ) {\r\n      this.renderWordCloud(\r\n        this.props.data,\r\n        this.svgElement.clientWidth,\r\n        this.svgElement.clientHeight\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.svg = null;\r\n    this.svgElement = null;\r\n  }\r\n\r\n  render() {\r\n    const { width, height } = this.props;\r\n    return (\r\n      <svg width={width} height={height} ref={this.setSvgRef}>\r\n        <g />\r\n      </svg>\r\n    );\r\n  }\r\n  /* end of lifecycle methods */\r\n\r\n  isDataChanged(prevData, newData) {\r\n    for (let i = 0, count = prevData.length; i < count; i++) {\r\n      if (prevData[i].annotation !== newData[i].annotation) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  createWords = data => {\r\n    if (data.length === 0) {\r\n      return [];\r\n    }\r\n    // Use the max total_amount in the data as the max in the scale's domain\r\n    // note we have to ensure the total_amount is a number.\r\n    let maxCount = d3.max(data, datum => datum.count);\r\n    let minCount = d3.min(data, datum => datum.count);\r\n\r\n    let fontSizeScale = d3\r\n      .scaleLinear()\r\n      .domain([minCount, maxCount])\r\n      .range([14, 32]);\r\n\r\n    let fontWeightScale = d3\r\n      .scaleQuantize()\r\n      .domain([minCount, maxCount])\r\n      .range([\"lighter\", \"normal\", \"bold\", \"bolder\"]);\r\n\r\n    let colorScale = d3\r\n      .scaleQuantize()\r\n      .domain([minCount, maxCount])\r\n      .range(WORD_COLOR_SETS[this.props.colorSet]);\r\n\r\n    let words = data.map((datum, index) => {\r\n      const fontSize = fontSizeScale(datum.count);\r\n      return {\r\n        id: index,\r\n        fontSize,\r\n        fontWeight: fontWeightScale(datum.count),\r\n        text: datum.annotation,\r\n        count: datum.count,\r\n        color: colorScale(datum.count)\r\n      };\r\n    });\r\n    words.sort((a, b) => b.count - a.count);\r\n\r\n    return words;\r\n  };\r\n\r\n  renderWordCloud = (data, viewBoxWidth, viewBoxHeight) => {\r\n    this.svg\r\n      .select(\"g\")\r\n      .selectAll(\"*\")\r\n      .remove();\r\n\r\n    let words = this.createWords(data);\r\n\r\n    let layout = cloud()\r\n      .size([viewBoxWidth, viewBoxHeight])\r\n      .words(words)\r\n      .text(datum => datum.text)\r\n      .rotate(() => 0)\r\n      .fontSize(datum => datum.fontSize)\r\n      .on(\"end\", this.draw.bind(this, viewBoxWidth, viewBoxHeight));\r\n\r\n    layout.start();\r\n    layout.stop();\r\n  };\r\n\r\n  draw = (viewBoxWidth, viewBoxHeight, words) => {\r\n    let wordCloud = this.svg\r\n      .attr(\"viewBox\", \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight)\r\n      .select(\"g\")\r\n      .attr(\r\n        \"transform\",\r\n        \"translate(\" + viewBoxWidth / 2 + \",\" + viewBoxHeight / 2 + \")\"\r\n      )\r\n      .selectAll(\".wordCloud\")\r\n      .data(words, word => word.index);\r\n    wordCloud.exit().remove();\r\n\r\n    wordCloud = wordCloud\r\n      .enter()\r\n      .append(\"text\")\r\n      .classed(\"wordCloud\", true)\r\n      .attr(\r\n        \"transform\",\r\n        datum =>\r\n          \"translate(\" + [datum.x, datum.y] + \")rotate(\" + datum.rotate + \")\"\r\n      )\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"font-size\", datum => datum.fontSize)\r\n      .attr(\"font-weight\", datum => datum.fontWeight)\r\n      .style(\"fill\", datum => datum.color)\r\n      .text(datum => datum.text);\r\n  };\r\n  /* end of d3 rendering methods */\r\n}\r\n\r\nWordCloud.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  data: PropTypes.array,\r\n  colorSet: PropTypes.oneOf([\"blue\", \"red\", \"green\"])\r\n};\r\n\r\nWordCloud.defaultProps = {\r\n  data: [],\r\n  colorSet: \"blue\"\r\n};\r\n\r\nexport default WordCloud;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Modal, Table, Tabs } from \"antd\";\r\nimport WordCloud from \"../WordCloud\";\r\nimport { i18n } from \"../../lib/constant\";\r\nimport \"./DocumentDetailModal.css\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nclass DocumentDetailModal extends Component {\r\n  /* React lifecycle methods */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentFieldPage: 1,\r\n      currentWordPage: 1\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!this.props.visible && this.state.currentFieldPage !== 1) {\r\n      this.setState({\r\n        currentFieldPage: 1,\r\n        currentWordPage: 1\r\n      });\r\n    }\r\n\r\n    if (!prevProps.visible && this.modalBodyContent) {\r\n      this.modalBodyContent.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      doc,\r\n      fieldPageSize,\r\n      wordPageSize,\r\n      visible,\r\n      onOk,\r\n      onCancel,\r\n      footer\r\n    } = this.props;\r\n    const { currentFieldPage, currentWordPage } = this.state;\r\n    return (\r\n      <Modal\r\n        title={doc.title || \"No title\"}\r\n        visible={visible}\r\n        onCancel={onCancel}\r\n        onOk={onOk}\r\n        width={\"90%\"}\r\n        footer={footer}\r\n      >\r\n        <div className=\"DocumentDetailModal-body\">\r\n          <div\r\n            className=\"DocumentDetailModal-body-content\"\r\n            ref={this.setModalBodyContentRef}\r\n          >\r\n            {doc.___highlighting ? (\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `${doc.___highlighting}`\r\n                }}\r\n              />\r\n            ) : (\r\n              doc.body\r\n            )}\r\n          </div>\r\n          <div className=\"DocumentDetailModal-body-field\">\r\n            <Tabs defaultActiveKey=\"fields\">\r\n              <TabPane tab={i18n.FIELDS} key=\"fields\">\r\n                {this.renderFieldTable(doc, fieldPageSize, currentFieldPage)}\r\n              </TabPane>\r\n              <TabPane tab={i18n.WORD_CLOUD} key=\"wordcloud\">\r\n                {this.renderWordTable(\r\n                  doc.___annotations,\r\n                  wordPageSize,\r\n                  currentWordPage\r\n                )}\r\n              </TabPane>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n  /* end of lifecycle methods */\r\n\r\n  /* other methods */\r\n  setModalBodyContentRef = element => {\r\n    this.modalBodyContent = element;\r\n  };\r\n\r\n  renderFieldTable = (doc, fieldPageSize, currentFieldPage) => {\r\n    let dataSource = [];\r\n    let i = 0;\r\n    for (let key in doc) {\r\n      if (\r\n        key !== \"body\" &&\r\n        key !== \"___highlighting\" &&\r\n        key !== \"___annotations\"\r\n      ) {\r\n        dataSource.push({\r\n          key: i++,\r\n          fieldName: key,\r\n          fieldValue: doc[key]\r\n        });\r\n      }\r\n    }\r\n    const columns = [\r\n      {\r\n        title: i18n.FIELD_NAME,\r\n        dataIndex: \"fieldName\",\r\n        key: \"fieldName\",\r\n        sorter: (a, b) => {\r\n          if (a.fieldName < b.fieldName) return -1;\r\n          if (a.fieldName > b.fieldName) return 1;\r\n          return 0;\r\n        },\r\n        defaultSortOrder: \"ascend\"\r\n      },\r\n      {\r\n        title: i18n.FIELD_VALUE,\r\n        dataIndex: \"fieldValue\",\r\n        key: \"fieldValue\"\r\n      }\r\n    ];\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        size=\"middle\"\r\n        pagination={{\r\n          pageSize: fieldPageSize || 5,\r\n          hideOnSinglePage: true,\r\n          current: currentFieldPage,\r\n          onChange: (page, pageSize) => {\r\n            this.setState({\r\n              currentFieldPage: page\r\n            });\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderWordTable = (annotations, wordPageSize, currentWordPage) => {\r\n    if (!annotations || annotations.length === 0) {\r\n      return <div class=\"ant-list-empty-text\">No data</div>;\r\n    }\r\n\r\n    const columns = [\r\n      {\r\n        title: i18n.WORD,\r\n        dataIndex: \"annotation\",\r\n        key: \"annotation\"\r\n      },\r\n      {\r\n        title: i18n.COUNT,\r\n        dataIndex: \"count\",\r\n        key: \"count\"\r\n      }\r\n    ];\r\n    return (\r\n      <Fragment>\r\n        <WordCloud\r\n          width={\"100%\"}\r\n          height={\"30vh\"}\r\n          data={\r\n            annotations.length > 50 ? annotations.slice(0, 50) : annotations\r\n          }\r\n        />\r\n        <Table\r\n          rowKey=\"annotation\"\r\n          columns={columns}\r\n          dataSource={annotations}\r\n          size=\"middle\"\r\n          pagination={{\r\n            pageSize: wordPageSize || 10,\r\n            hideOnSinglePage: true,\r\n            current: currentWordPage,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                currentWordPage: page\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n  /* end of other methods */\r\n}\r\n\r\nDocumentDetailModal.propTypes = {\r\n  doc: PropTypes.object.isRequired,\r\n  visible: PropTypes.bool.isRequired,\r\n  onOk: PropTypes.func,\r\n  onCacnel: PropTypes.func,\r\n  fieldPageSize: PropTypes.number,\r\n  footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\r\n};\r\n\r\nDocumentDetailModal.defaultProps = {\r\n  doc: { title: \"\", body: \"\" },\r\n  visible: false,\r\n  fieldPageSize: 10,\r\n  wordPageSize: 10,\r\n  footer: null\r\n};\r\n\r\nexport default DocumentDetailModal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { List, Avatar } from \"antd\";\r\n\r\nimport \"./BasicRow.css\";\r\n\r\nconst BasicRow = ({ title, body, highlighting, onClick, index, style }) => (\r\n  <List.Item\r\n    className=\"BasicRow\"\r\n    style={{\r\n      ...style\r\n    }}\r\n    onClick={onClick}\r\n  >\r\n    <List.Item.Meta\r\n      avatar={\r\n        <Avatar className=\"BasicRow-avatar\" size=\"large\">\r\n          {index}\r\n        </Avatar>\r\n      }\r\n      title={title.length < 100 ? title : title.slice(0, 100) + \"...\"}\r\n      description={\r\n        highlighting ? (\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: `${\r\n                highlighting.length < 500\r\n                  ? highlighting\r\n                  : highlighting.slice(0, 500) + \"...\"\r\n              }`\r\n            }}\r\n          />\r\n        ) : body.length < 500 ? (\r\n          body\r\n        ) : (\r\n          body.slice(0, 500) + \"...\"\r\n        )\r\n      }\r\n    />\r\n  </List.Item>\r\n);\r\n\r\nBasicRow.propTypes = {\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  highlighting: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  onClick: PropTypes.func,\r\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n};\r\n\r\nBasicRow.defaultProps = {\r\n  title: \"\",\r\n  body: \"\",\r\n  highlighting: \"\",\r\n  onClick: () => {},\r\n  index: 0\r\n};\r\n\r\nexport default BasicRow;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BasicRow from \"../BasicRow\";\r\nimport WordCloud from \"../../WordCloud\";\r\nimport \"./WordCloudRow.css\";\r\n\r\nconst WordCloudRow = ({ data, title, body, highlighting, onClick, index }) => (\r\n  <div className=\"WordCloudRow\">\r\n    <BasicRow\r\n      title={title}\r\n      body={body}\r\n      highlighting={highlighting}\r\n      onClick={onClick}\r\n      index={index}\r\n    />\r\n    <WordCloud width={\"100%\"} height={\"100%\"} data={data} />\r\n  </div>\r\n);\r\n\r\nWordCloudRow.propTypes = {\r\n  data: PropTypes.array,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  highlighting: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  index: PropTypes.number\r\n};\r\n\r\nWordCloudRow.defaultProps = {\r\n  data: [],\r\n  title: \"\",\r\n  body: \"\",\r\n  highlighting: <span />,\r\n  onClick: () => {},\r\n  index: 0\r\n};\r\n\r\nexport default WordCloudRow;\r\n","import axios from \"axios\";\r\n\r\nconst ROOT_URI =\r\n  process.env.NODE_ENV !== \"production\"\r\n    ? \"http://localhost:3100\"\r\n    : process.env.REACT_APP_KA_API_URL;\r\n\r\n/**\r\n *\r\n * @param {string} collectionId\r\n * @param {string} query\r\n * @param {number} docCount\r\n */\r\nexport const fetchBasicQueryResult = (collectionId, query, docCount) =>\r\n  axios({\r\n    method: \"POST\",\r\n    url: `${ROOT_URI}/basic-query`,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    data: {\r\n      collectionId,\r\n      query,\r\n      docCount\r\n    }\r\n  }).then(response => response.data);\r\n\r\n/**\r\n *\r\n * @param {string} collectionId\r\n * @param {string} query\r\n */\r\nexport const fetchClassifierResult = (collectionId, query) =>\r\n  axios({\r\n    url: `${ROOT_URI}/classify`,\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    data: {\r\n      collectionId,\r\n      query\r\n    }\r\n  }).then(response => response.data);\r\n\r\n/**\r\n *\r\n * @param {string} collectionId\r\n * @param {string} query\r\n * @param {number} docCount\r\n */\r\nexport const fetchSimilarDocumentQueryResult = (\r\n  collectionId,\r\n  query,\r\n  docCount\r\n) =>\r\n  axios({\r\n    url: `${ROOT_URI}/similar-document-query`,\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    data: {\r\n      collectionId,\r\n      query,\r\n      docCount\r\n    }\r\n  }).then(response => response.data);\r\n\r\n/**\r\n *\r\n * @param {string} collectionId\r\n * @param {string} query\r\n * @param {number} docCount\r\n */\r\nexport const fetchPhrasalQueryResult = (collectionId, query, docCount) =>\r\n  axios({\r\n    url: `${ROOT_URI}/phrasal-query`,\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    data: {\r\n      collectionId,\r\n      query,\r\n      docCount\r\n    }\r\n  }).then(response => response.data);\r\n\r\nexport const checkConnectionStatus = () =>\r\n  axios.get(`${ROOT_URI}/connection`).then(response => response.data);\r\n","class BrowserStorage {\r\n  constructor() {\r\n    if (!this.storageAvailable(\"localStorage\")) {\r\n      throw new Error(\"localStorage not available for your browser\");\r\n    }\r\n  }\r\n\r\n  storageAvailable = type => {\r\n    try {\r\n      var storage = window[type],\r\n        x = \"__storage_test__\";\r\n      storage.setItem(x, x);\r\n      storage.removeItem(x);\r\n      return true;\r\n    } catch (e) {\r\n      return (\r\n        e instanceof DOMException &&\r\n        // everything except Firefox\r\n        (e.code === 22 ||\r\n          // Firefox\r\n          e.code === 1014 ||\r\n          // test name field too, because code might not be present\r\n          // everything except Firefox\r\n          e.name === \"QuotaExceededError\" ||\r\n          // Firefox\r\n          e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\r\n        // acknowledge QuotaExceededError only if there's something already stored\r\n        storage.length !== 0\r\n      );\r\n    }\r\n  };\r\n\r\n  getItem(key) {\r\n    return localStorage.getItem(key);\r\n  }\r\n\r\n  setItem(key, value) {\r\n    localStorage.setItem(key, value);\r\n  }\r\n\r\n  clear() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  removeItem(key) {\r\n    localStorage.removeItem(key);\r\n  }\r\n}\r\n\r\nexport const browserStorage = new BrowserStorage();\r\n","// module imports\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentCollection, fetchCollections } from \"./action\";\r\nimport { Layout, Modal, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\nimport QueryBar from \"./component/QueryBar\";\r\nimport {\r\n  QUERY_MODE_BASIC_SEARCH,\r\n  QUERY_MODE_SIMILAR_DOCUMENT_SEARCH,\r\n  QUERY_MODE_PHRASAL_SEARCH\r\n} from \"./component/QueryModeSelect\";\r\nimport ResultCard from \"./component/ResultCard\";\r\nimport ClassificationCard from \"./component/ClassificationCard\";\r\nimport QueryHistoryCard from \"./component/QueryHistoryCard\";\r\nimport CollectionSelect from \"./component/CollectionSelect\";\r\nimport DocumentDetailModal from \"./component/DocumentDetailModal\";\r\nimport BasicRow from \"./component/ResultCard/BasicRow\";\r\nimport WordCloudRow from \"./component/ResultCard/WordCloudRow\";\r\nimport {\r\n  fetchBasicQueryResult,\r\n  fetchClassifierResult,\r\n  fetchSimilarDocumentQueryResult,\r\n  fetchPhrasalQueryResult,\r\n  checkConnectionStatus\r\n} from \"./lib/service\";\r\nimport { browserStorage } from \"./lib/util\";\r\nimport { i18n } from \"./lib/constant\";\r\nimport logo from \"./logo.svg\";\r\n\r\n// static file imports\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass App extends Component {\r\n  /* React lifecycle methods */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isApplicationLoading: true,\r\n      query: \"\",\r\n      queryMode: QUERY_MODE_SIMILAR_DOCUMENT_SEARCH,\r\n      nextQueryMode: QUERY_MODE_SIMILAR_DOCUMENT_SEARCH,\r\n      classificationData: [],\r\n      isClassificationDataLoading: false,\r\n      documents: [],\r\n      isDocumentsLoading: false,\r\n      wordStats: [],\r\n      queryHistory: [],\r\n      selectedDocument: {\r\n        title: \"\",\r\n        body: \"\",\r\n        date: \"\"\r\n      },\r\n      modalVisible: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    checkConnectionStatus()\r\n      .then(response => {\r\n        this.props.fetchCollections(\r\n          browserStorage.getItem(\"defaultCollectionId\")\r\n        );\r\n        this.setState({\r\n          isApplicationLoading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        if (error.response) {\r\n          Modal.error({\r\n            title: i18n.CONNECTION_ERROR,\r\n            content: `CODE: ${error.response.data.code} / Message: ${\r\n              error.response.data.message\r\n            }`\r\n          });\r\n        } else {\r\n          Modal.error({\r\n            title: i18n.ERROR,\r\n            content: error.message\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isApplicationLoading,\r\n      query,\r\n      nextQueryMode,\r\n      queryMode,\r\n      classificationData,\r\n      isClassificationDataLoading,\r\n      documents,\r\n      isDocumentsLoading,\r\n      queryHistory,\r\n      selectedDocument,\r\n      modalVisible\r\n    } = this.state;\r\n    const {\r\n      isFetchingCollections,\r\n      currentCollection,\r\n      collections\r\n    } = this.props;\r\n\r\n    return (\r\n      <Layout className=\"App\">\r\n        <Header className=\"App-header\">\r\n          <div className=\"App-header-container\">\r\n            <img className=\"App-logo\" src={logo} alt=\"logo\" height=\"40\" />\r\n            <div className=\"App-name-container\">\r\n              <div className=\"App-name-title\">\r\n                IBM Cognitive Analytics Service\r\n              </div>\r\n              <div className=\"App-name-subtitle\">\r\n                powered by Watson Explorer oneWEX ver.12.0.2\r\n              </div>\r\n            </div>\r\n            <CollectionSelect\r\n              collections={collections}\r\n              currentCollectionId={currentCollection.id}\r\n              onChangeCollection={this.handleCollectionChange}\r\n              onClickRefresh={this.handleCollectionRefreshClick}\r\n              isLoadingCollection={isFetchingCollections}\r\n            />\r\n          </div>\r\n\r\n          <QueryBar\r\n            inputValue={query}\r\n            onChangeInput={this.handleQueryInputChange}\r\n            onClear={this.handleClearQuery}\r\n            onSearch={this.handleSearch}\r\n            queryMode={nextQueryMode}\r\n            onChangeQueryMode={this.handleQueryModeChange}\r\n            placeholder={i18n.QUERY_BAR_PLACEHOLDER}\r\n            disabled={isApplicationLoading}\r\n          />\r\n        </Header>\r\n        <Layout className=\"App-body\">\r\n          <Spin\r\n            size=\"large\"\r\n            tip={i18n.LOADING}\r\n            style={{ maxHeight: \"100%\" }}\r\n            spinning={isApplicationLoading}\r\n          >\r\n            <Content className=\"App-body-content\">\r\n              <div\r\n                className=\"App-body-content-column\"\r\n                style={{ gridTemplateRows: \"1fr 3fr\" }}\r\n              >\r\n                <ClassificationCard\r\n                  title={i18n.CLASSIFICATION_CARD_TITLE}\r\n                  isLoading={isClassificationDataLoading}\r\n                  data={classificationData}\r\n                />\r\n                <QueryHistoryCard\r\n                  title={i18n.QUERY_HISTORY_CARD_TITLE}\r\n                  isLoading={false}\r\n                  data={queryHistory}\r\n                  onClickQuery={this.handleClickQuery}\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"App-body-content-column\"\r\n                style={{ gridTemplateRows: \"1fr\" }}\r\n              >\r\n                <ResultCard\r\n                  title={i18n.RESULT_CARD_TITLE}\r\n                  isLoading={isDocumentsLoading}\r\n                  data={documents}\r\n                  onClickDocument={this.handleDocumentClick}\r\n                  renderRow={this.renderRow(queryMode)}\r\n                />\r\n              </div>\r\n            </Content>\r\n          </Spin>\r\n        </Layout>\r\n        <DocumentDetailModal\r\n          doc={selectedDocument}\r\n          visible={modalVisible}\r\n          onOk={this.handleModalClickOk}\r\n          onCancel={this.handleModalClickCancel}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n  /* end of lifecycle methods */\r\n\r\n  /* ui handler methods */\r\n  handleCollectionChange = collectionId => {\r\n    this.props.setCurrentCollection(collectionId);\r\n    browserStorage.setItem(\"defaultCollectionId\", collectionId);\r\n  };\r\n\r\n  handleCollectionRefreshClick = () => {\r\n    this.props.fetchCollections();\r\n  };\r\n\r\n  handleQueryModeChange = value => {\r\n    this.setState({\r\n      nextQueryMode: value\r\n    });\r\n  };\r\n\r\n  handleQueryInputChange = event => {\r\n    const query = event.target.value;\r\n    this.setState({\r\n      query\r\n    });\r\n  };\r\n\r\n  handleClearQuery = () => {\r\n    this.setState({\r\n      query: \"\"\r\n    });\r\n  };\r\n\r\n  handleSearch = () => {\r\n    if (this.state.query.length > 0) {\r\n      this.handleSendQuery(this.state.query);\r\n    }\r\n  };\r\n\r\n  handleSendQuery = query => {\r\n    this.fetchAnalysisData(query);\r\n  };\r\n\r\n  handleModalClickOk = () => {\r\n    this.setState({\r\n      modalVisible: false\r\n    });\r\n  };\r\n\r\n  handleModalClickCancel = () => {\r\n    this.setState({\r\n      modalVisible: false\r\n    });\r\n  };\r\n\r\n  handleDocumentClick = document => {\r\n    this.setState({\r\n      modalVisible: true,\r\n      selectedDocument: {\r\n        //date: moment(document.date).format(\"l\") && moment(0).format(\"l\"),\r\n        ...document\r\n      }\r\n    });\r\n  };\r\n\r\n  handleClickQuery = (index, query, queryMode, event) => {\r\n    this.setState(\r\n      {\r\n        nextQueryMode: queryMode,\r\n        query\r\n      },\r\n      () => {\r\n        this.fetchAnalysisData(query);\r\n      }\r\n    );\r\n  };\r\n  /* end of ui handler methods */\r\n\r\n  /* other methods */\r\n  fetchAnalysisData = query => {\r\n    this.setState({\r\n      isClassificationDataLoading: true,\r\n      isDocumentsLoading: true\r\n    });\r\n\r\n    let fetchFunc;\r\n    let collectionId = this.props.currentCollection.id;\r\n\r\n    switch (this.state.nextQueryMode) {\r\n      case QUERY_MODE_BASIC_SEARCH:\r\n        fetchFunc = Promise.all([\r\n          fetchClassifierResult(collectionId, query),\r\n          fetchBasicQueryResult(collectionId, query, 30)\r\n        ]);\r\n        break;\r\n      case QUERY_MODE_PHRASAL_SEARCH:\r\n        fetchFunc = Promise.all([\r\n          fetchClassifierResult(collectionId, query),\r\n          fetchPhrasalQueryResult(collectionId, query, 30)\r\n        ]);\r\n        break;\r\n      default:\r\n      case QUERY_MODE_SIMILAR_DOCUMENT_SEARCH:\r\n        fetchFunc = Promise.all([\r\n          fetchClassifierResult(collectionId, query),\r\n          fetchSimilarDocumentQueryResult(collectionId, query, 30)\r\n        ]);\r\n        break;\r\n    }\r\n\r\n    return fetchFunc\r\n      .then(results => {\r\n        this.setState((prevState, props) => {\r\n          const index = prevState.queryHistory.length;\r\n          return {\r\n            queryMode: prevState.nextQueryMode,\r\n            isClassificationDataLoading: false,\r\n            isDocumentsLoading: false,\r\n            classificationData: results[0].classes,\r\n            documents: results[1].docs,\r\n            queryHistory: [\r\n              {\r\n                index,\r\n                query,\r\n                date: moment().valueOf(),\r\n                queryMode: prevState.nextQueryMode,\r\n                collection: props.currentCollection\r\n              }\r\n            ].concat(prevState.queryHistory)\r\n          };\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        Modal.error({ title: i18n.ERROR, content: error.message });\r\n        this.setState({\r\n          isClassificationDataLoading: false,\r\n          isDocumentsLoading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  renderRow(queryMode) {\r\n    switch (queryMode) {\r\n      case QUERY_MODE_SIMILAR_DOCUMENT_SEARCH:\r\n        return onClickItem => item => {\r\n          const index = item.rank;\r\n          const title = item.title;\r\n          const body = item.body;\r\n          const highlighting = item.___highlighting || \"\";\r\n          const annotations = item.___annotations;\r\n          return (\r\n            <WordCloudRow\r\n              index={index}\r\n              title={title}\r\n              body={body}\r\n              highlighting={highlighting}\r\n              onClick={onClickItem.bind(this, item)}\r\n              data={annotations.slice(0, 20)}\r\n            />\r\n          );\r\n        };\r\n      case QUERY_MODE_BASIC_SEARCH:\r\n      case QUERY_MODE_PHRASAL_SEARCH:\r\n      default:\r\n        return onClickItem => item => {\r\n          const index = item.rank;\r\n          const title = item.title;\r\n          const body = item.body;\r\n          const highlighting = item.___highlighting || \"\";\r\n          return (\r\n            <BasicRow\r\n              index={index}\r\n              title={title}\r\n              body={body}\r\n              highlighting={highlighting}\r\n              onClick={onClickItem.bind(this, item)}\r\n            />\r\n          );\r\n        };\r\n    }\r\n  }\r\n  /* end of other methods */\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isFetchingCollections: state.collections.isFetching,\r\n  currentCollection: state.collections.currentItem,\r\n  collections: state.collections.items\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollections: defaultCollectionId =>\r\n    dispatch(fetchCollections(defaultCollectionId)),\r\n  setCurrentCollection: collectionId =>\r\n    dispatch(setCurrentCollection(collectionId))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","/**\r\n * Redux's reducers\r\n * Please refer to https://redux.js.org/basics/reducers\r\n */\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  SET_CURRENT_COLLECTION,\r\n  SET_COLLECTIONS,\r\n  REQUEST_COLLECTIONS\r\n} from \"../action\";\r\n\r\nlet collections = (\r\n  state = {\r\n    isFetching: false,\r\n    currentItem: { name: \"\", id: \"\" },\r\n    items: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SET_COLLECTIONS:\r\n      return Object.assign({}, state, {\r\n        items: action.collections,\r\n        isFetching: false\r\n      });\r\n    case SET_CURRENT_COLLECTION:\r\n      let collections = state.items;\r\n      let collectionCount = state.items.length;\r\n      let targetItem = null;\r\n      for (let i = 0; i < collectionCount; i++) {\r\n        if (collections[i].id === action.collectionId) {\r\n          targetItem = collections[i];\r\n        }\r\n      }\r\n      return Object.assign({}, state, { currentItem: targetItem });\r\n    case REQUEST_COLLECTIONS:\r\n      return Object.assign({}, state, {\r\n        isFetching: true\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  collections\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./configureStore\";\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n//registerServiceWorker();\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nexport default function configureStore(preloadedState) {\r\n  return process.env.NODE_ENV === \"production\"\r\n    ? createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n    : createStore(\r\n        rootReducer,\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() arg exposes redux state to Redux chrome tool\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n        applyMiddleware(thunkMiddleware)\r\n      );\r\n}\r\n"],"sourceRoot":""}